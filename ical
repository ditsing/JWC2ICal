#!/usr/bin/perl -w
# Usage
# jwc2ical [class_num]
# Examples: 	jwc2ical 0903101
# 		jwc2ical 0903102 > 0903102.ics

use strict;
use Data::ICal;
use Data::ICal::Entry qw(all);
use Data::ICal::Entry::Event;
use Data::ICal::Entry::TimeZone;
use Data::ICal::Entry::TimeZone::Standard;
use Data::ICal::Entry::Alarm::Display;
use Date::ICal;
use utf8;
use encoding 'utf8';
use CGI qw /:standard/;

my $query = CGI->new;
my $class_num = '0903101';
my $file_name = '/dev/shm/'.'t'.'.ical.events';
my @needed_class = ( 0, 1, 2, 3, 4, 5, 6, 7, 8, 9);

my @day_name = ( "MO", "TU", "WE", "TH", "FR", "SA", "SU");
my @class_parts = qw/ name teacher location week repeats date s_time t_time/;
my @exam_parts = qw/ week date s_time t_time location name/;

open DT, "<", "dtstart" or die "No dtstart!";
my $date = <DT>;
chomp $date;
my @first_monday = split /\s+/, $date;
my $year = $first_monday[0];
my $month = $first_monday[1];
close DT;

open EVENT, "<:encoding(utf8)", $file_name or print "Content-Type:text/html\n\nClasses not found!\n" and exit;
my $line = <EVENT>;
chomp $line;
my @courses = split /\s+/, $line;
my @useless;
my $cnt = 0;
foreach ( 0..( @courses-1))
{
	$cnt < @needed_class && $_ == $needed_class[$cnt] ? ++$cnt : push @useless, $courses[$_];
}
print "useless: @useless\n";

my @classes;
my @exams;
while ( my $line = <EVENT>)
{
	chomp $line;
	#my @info = split /\s+/, $line;
	my @info = split /`/, $line;
	if ( $info[0] eq 'Class:')
	{
		my %class_info;
		foreach ( 1..@class_parts)
		{
			if ( $class_parts[$_-1] =~ m/time/)
			{
				$class_info{$class_parts[$_-1]} = [ split /:/, $info[$_]];
			}
			else
			{
				$class_info{$class_parts[$_-1]} = $info[$_];
			}
		}
		my $flag = 1;
		foreach ( @useless)
		{
			$class_info{name} =~ m/$_/ and $flag = undef or last;
		}
		push @classes, { %class_info} if $flag;
		print $class_info{name}, "", $flag, "\n" if $flag;
	}
	else
	{
		my %exam_info;
		foreach ( 1..@exam_parts)
		{
			if ( $exam_parts[$_-1] =~ m/time/)
			{
				$exam_info{$class_parts[$_-1]} = [ split /:/, $info[$_]];
			}
			else
			{
				$exam_info{$exam_parts[$_-1]} = $info[$_];
			}
		}
		my $flag = 1;
		foreach ( @useless)
		{
			$exam_info{name} =~ m/$_.*考试/ and $flag = undef or last;
		}
		push @exams, { %exam_info} if $flag;
	}
}
close EVENT;
#unlink $file_name;
exit;

# All informations are available now.
my $tz = "Asia/Shanghai"; # Or Harbin.
my $tzset = "+0800";

my $vcal = Data::ICal->new();
# Copied from export data of Google Calender.
$vcal->add_properties(
	method => "PUBLISH",
	calscale => "GREGORIAN",
	"X-WR-CALNAME" => "哈工大${class_num}班${year}年".( $month < 6 ? "春" : "秋")."季课程表",
	"X-WR-TIMEZONE" => $tz, 
);

my $vtz = Data::ICal::Entry::TimeZone->new();
$vtz->add_properties(
	tzid => $tz, 
	"X-LIC-LOCATION" => $tz,  # I think this is nothing, too.
);

my $vtz_std = Data::ICal::Entry::TimeZone::Standard->new();

$vtz_std->add_properties(
	tzoffsetfrom => $tzset,
	tzoffsetto => $tzset,
	tzname => "CST",
	dtstart => "19700101T000000"
);

$vtz->add_entry( $vtz_std);
$vcal->add_entry( $vtz);

#print $vcal->as_string, "\n";

my $first_day = Date::ICal->new(
	year 		=> $first_monday[0],
	month 		=> $first_monday[1],
	day 		=> $first_monday[2],
	offset 		=> $tzset,
);

my $now = Date::ICal->new;
my $str_now_cst = $now->ical( offset => $tzset);
my $str_now_utc = $now->ical;
#my $second_day = $first_day->clone;
#$second_day->add( day => 163);
#print $first_day->ical( offset => $tzset), "\n", $second_day->ical( offset => $tzset), "\n";

# Events come here
foreach ( @classes)
{
	my %class_info = %$_;
	print "Adding $class_info{name} from @{$class_info{s_time}} to @{$class_info{t_time}} clock ".
	"at $class_info{week} week during $class_info{during} weeks on $day_name[$class_info{date}]\n";

	# Until now ( 2012.1), JWC does not support a class ends at the middle of a week.
	# So I do not condsider it.

	# Find out when the first class starts.
	my $first_class_start_time = $first_day->clone;
	my $first_class_end_time = $first_day->clone;

	$first_class_start_time->add(
		day    		=> $class_info{week} * 7 - 7 + $class_info{date},
		hour   		=> $class_info{s_time}[0],
		min    		=> $class_info{s_time}[1],
		sec    		=> 0,
	);

	$first_class_end_time->add(
		day    		=> $class_info{week} * 7 - 7 + $class_info{date},
		hour   		=> $class_info{t_time}[0],
		min    		=> $class_info{t_time}[1],
		sec    		=> 0,
	);

	my $class_count = $class_info{during};
	my $str_start = $first_class_start_time->ical( offset => $tzset);
	my $str_end = $first_class_end_time->ical( offset => $tzset);

	my $vevent = Data::ICal::Entry::Event->new;
	$vevent->add_properties(
		# RFC 2445 said, dtstart/end with rrule must specify tzid
		dtstart 	=> [ $str_start, { tzid => $tz}],
		dtend	  	=> [ $str_end, { tzid => $tz}],
		rrule 		=> "FREQ=WEEKLY;COUNT=$class_count;BYDAY=$day_name[$class_info{date}]",
		exdate 		=> [ $str_now_cst, { tzid => $tz}],			# Now
		dtstamp		=> $str_now_utc, 
		created  	=> $str_now_utc,
		description  	=> "Teacher: ".$class_info{teacher},			# Teacher
		"last-modified" => $str_now_utc,
		location 	=> $class_info{location},				# Class room
		sequence 	=> 1,
		status 		=> "CONFIRMED",
		summary 	=> $class_info{name},					# Course name
		transp 		=> "OPAQUE", 						# What is it ? 
	);

	my $valarm = Data::ICal::Entry::Alarm::Display->new();
	$valarm->add_properties(
		description 	=> "This is an event reminder",
		trigger 	=> "-P0DT0H10M0S", 					# That means -10 mins.
	);

	$vevent->add_entry( $valarm);
	$vcal->add_entry( $vevent);
}

foreach ( @exams)
{
	my %exam_info = %$_;
	my $exam_start_time = $first_day->clone;

	$exam_start_time->add(
		day 	=> $exam_info{week} * 7 - 7 + $exam_info{date} - 1,
		hour 	=> $exam_info{s_time}[0],
		min 	=> $exam_info{s_time}[1],
		sec 	=> 0,
	);

	my $exam_end_time = $first_day->clone;
	$exam_end_time->add(
		day 	=> $exam_info{week} * 7 - 7 + $exam_info{date} - 1,
		hour 	=> $exam_info{t_time}[0],
		min 	=> $exam_info{t_time}[1],
		sec 	=> 0,
	);


	my $vexam = Data::ICal::Entry::Event->new;
	$vexam->add_properties(
		dtstart 	=> $exam_start_time->ical,
		dtend	  	=> $exam_end_time->ical,
		dtstamp		=> $str_now_utc, 
		created  	=> $str_now_utc,
		description  	=> "考试",
		"last-modified" => $str_now_utc,
		location 	=> $exam_info{location},				# Class room
		sequence 	=> 1,
		status 		=> "CONFIRMED",
		summary 	=> $exam_info{name}, 					# Subject name
		transp 		=> "OPAQUE", 						# What is it ? 
	);

	my $valarm = Data::ICal::Entry::Alarm::Display->new();
	$valarm->add_properties(
		description 	=> "This is an event reminder",
		trigger 	=> "-P0DT0H10M0S", 					# That means -10 mins.
	);

	$vexam->add_entry( $valarm);
	$vcal->add_entry( $vexam);
}

#print "Content-Type:application/octet-stream; name=\"$class_num.ics\"\n";
#print "Content-Disposition: attachment; filename=\"$class_num.ics\"\n\n";
print header( -type => 'application/octet-stream', -attachment => "$class_num.ics", -charset => 'utf-8');
print $vcal->as_string( crlf => "\n"), "\n";

exit;
